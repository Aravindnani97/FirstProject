@model FirstProject.ViewModel.MovieViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Create New Movie</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            @Html.ValidationSummary(false, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.Movie.Name, new { @class = "text-light bg-dark" })
                    @Html.TextBoxFor(x => x.Movie.Name, new { @class = "form-control", autocomplete = "off" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Movie.DirectorName, new { @class = "text-light bg-dark" })
                    @Html.TextBoxFor(m => m.Movie.DirectorName, new { @class = "form-control", autocomplete = "off" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Movie.ReleaseDate, new { @class = "text-light bg-dark" })
                    @Html.TextBoxFor(m => m.Movie.ReleaseDate, new { @class = "form-control", type = "date", autocomplete = "off" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Movie.GenreId, new { @class = "text-light bg-dark" })
                    @*@Html.TextBoxFor(m => m.GenreId, new { @class = "form-control", autocomplete = "off" })*@
                    @Html.DropDownListFor(x => x.Movie.GenreId, new SelectList(Model.GetGenres, "Id", "GenreName"), "-Select the Genre-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Movie.GenreId)
                </div>
                <div class="form-group">
                    <button id="cmdSubmit" type="Submit" class="btn btn-outline-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>